process PROD = {

// configure MessageLogger
   service = MessageLogger {
      vstring destinations = 
           {
                   "dqm_digi_warning.txt",
                   "dqm_digi_debug.txt",
                   "dqm_digi_info.txt",
                   "cerr"
           }
           PSet critical.txt = 
           {
                   string threshold = "ERROR" 
                   PSet default = { int32 limit = 0 }
           }
           PSet detailed.txt = 
           {
                   string threshold = "DEBUG" 
                   PSet default = { int32 limit = 0 } 
           }
           PSet dqm_digi_info.txt = 
           {
                   string threshold = "INFO" 
                   PSet default = { int32 limit = 0 }
           }
           PSet cerr = 
           {
                   string threshold = "WARNING" 
                   PSet default = { int32 limit = 0 }
           }
      }

//
	source = PoolSource { 
          untracked vstring fileNames = {'file:SingleMuonSimHits.root'}
          untracked int32 maxEvents = 5
          untracked uint32 debugVebosity = 10
          untracked bool   debugFlag     = true
	}

//
	es_source magfield = XMLIdealGeometryESSource {
		  FileInPath GeometryConfiguration ="Geometry/CMSCommonData/data/FieldConfiguration.xml"
		  #the proper root node is set in the xml file
		  string rootNodeName=""
		}
        es_module = VolumeBasedMagneticFieldESProducer {
 	           double findVolumeTolerance = 0.0
 	           untracked bool cacheLastVolume = true
	           untracked bool timerOn = false
		}

//
	es_source = XMLIdealGeometryESSource {
	FileInPath GeometryConfiguration="Geometry/TrackerSimData/data/trackerSimConfiguration.xml" 
	string rootNodeName = ""
	}
        es_module = TrackerGeometricDetESModule {}
        es_module = TrackerDigiGeometryESModule {}

// sistripdigi
include "SimTracker/SiStripDigitizer/data/SiStripDigi.cfi"


        module out = PoolOutputModule {
               untracked string fileName = 'stripdigi.root'
        }

// new for DQM
       es_source = PoolDBESSource {
                     VPSet toGet = {
                       { string record = "SiStripReadoutCablingRcd"
                         string tag = "SiStripReadoutCabling_v1"
                       }
                     }
                     bool loadAll = true
                     string connect = "sqlite_file:sistripcabling.db"
                     string timetype = "runnumber"
                     untracked uint32 authenticationMethod = 1         
                     untracked uint32 messagelevel = 0
        }

//
       service = DaqMonitorROOTBackEnd{}

//
       es_module = SiStripStructureBuilder {}

// the actual monitoring module
       module digimonitor = SiStripMonitorDigi {
                               string DigiProducer="stripdigi"
                               bool ShowMechanicalStructureView = true
                               bool ShowReadoutView = false
                               bool ShowControlView = false
                               bool OutputMEsInRootFile = true
                               string OutputFileName="test_digi.root"
                            }

       path p = {stripdigi,digimonitor}
}
